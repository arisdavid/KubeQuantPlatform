replicaCount: 1

sqs:
  ingestQueueName: s3-event-notification-queue
  queueWaitTime: 15

s3:
  gbmIngestBucketName: rqmp-ingest-gbm
  kmvIngestBucketName: rqmp-ingest-kmv


batchQueueManagerImage:
  repository: batch-queue-manager
  pullPolicy: Never

configMap:
  name: bqm-config-map

secret:
  name: bqm-secret

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

role:
  name: sqs-manager-role

roleBinding:
  name: sqs-manager-role

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: sqs-manager-service-account

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
